library IEEE;
use IEEE.STD_LOGIC_1164.all; 
use IEEE.STD_LOGIC_ARITH.all;
entity top_level is -- top-level design for testing
port(clk, reset: in STD_LOGIC;
     WriteData, DataAdr: out STD_LOGIC_VECTOR(31 downto 0);
     MemWrite: out STD_LOGIC);
end;
architecture test of top_level is
component scp
port(clk, reset: in STD_LOGIC;
     PC: out STD_LOGIC_VECTOR(31 downto 0);
     Instr: in STD_LOGIC_VECTOR(31 downto 0);
     MemWrite: out STD_LOGIC;
     ALUResult, WriteData:out STD_LOGIC_VECTOR(31 downto 0);
     ReadData: in STD_LOGIC_VECTOR(31 downto 0));
end component;
component imem
port(a: in STD_LOGIC_VECTOR(31 downto 0);
    rd: out STD_LOGIC_VECTOR(31 downto 0));
end component;
component dmem
port(clk, we: in STD_LOGIC;
    a, wd: in STD_LOGIC_VECTOR(31 downto 0);
    rd: out STD_LOGIC_VECTOR(31 downto 0));
end component;
signal PC,Instr,ReadData,WriteData_temp,DataAdr_temp: STD_LOGIC_VECTOR(31 downto 0);
signal MemWrite_temp:std_logic;
begin
-- instantiate processor and memories
i_arm: scp port map(clk, reset, PC, Instr, MemWrite_temp, DataAdr_temp,WriteData_temp, ReadData);
i_imem: imem port map(PC, Instr);
i_dmem: dmem port map(clk, MemWrite_temp, DataAdr_temp,WriteData_temp, ReadData);
WriteData<=WriteData_temp;
DataAdr<=DataAdr_temp;
MemWrite<=MemWrite_temp;
end;
